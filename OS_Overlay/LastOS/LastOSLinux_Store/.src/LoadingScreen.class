' Gambas class file


Public Sub Form_Open()
  Dim S As String
  Me.Background = &h000000
  Me.Foreground = &hFFFFFF
  Status.Foreground = &hFFFFFF
  Status.Top = Me.Height - Status.Height - 5
  If InStr(LLMod.TempPath, ".lltemp", 1) >= 1 Then 
    Try Kill (LLMod.TempPath)
  End If
  If Not Exist(LLMod.TempPath) Then Shell "mkdir -p " & Chr(34) & LLMod.TempPath & Chr(34) Wait
  
  'Get App's Folder
  LLM.AppPath = Application.Path ' Application.Path is the apps path, Application.Dir is the PWD (Current Directory)
  LLMod.AppPath = Application.Path ' Application.Path is the apps path, Application.Dir is the PWD (Current Directory)
  LLM.HomePath = Application.Env["HOME"]  
  
  If LLM.AppPath = LLM.HomePath Then LLM.AppPath = "/LastOS/LastOSLinux_Store"
  If LLM.AppPath = "/LastOS" Then LLM.AppPath &= "/LastOSLinux_Store"
  If Not Exist(LLM.AppPath) Then LLM.AppPath = "/LastOS/LastOSLinux_Store"
  
  LLMod.AppPath = LLM.AppPath
  
  LLMod.Linux7z = LLMod.AppPath & "/Tools/7zzs"
  If Not Exist(LLMod.Linux7z) Then LLMod.Linux7z = "7z" 'Fall back to built in 7z if not available
  
  'Parse args to see if launcher
  For Each S In Args
    S = Trim(Lower(S))
    If S <> "" Then 
      
      Select Case S
      Case "-launcher", "-l"
        LLMod.StoreMode = 1
      Case "-store", "-s"
        LLMod.StoreMode = 0
      End Select
    End If
  Next
  
  'Get LLM.AppPath & "LastOSLinuxSettings.ini" 'SETTINGS HERE
  LoadSettings(LLMod.Slashed(LLM.AppPath) & "LastOSLinuxStoreSettings.ini")
  
  'Load Theme.ini
  Dim hFile As File
  Dim sLine As String
  
  Dim ThemeFile As String
  ThemeFile = LLM.AppPath & "/Themes/Theme.ini"
  If LLMod.StoreMode = 1 Then
    If Exist(LLM.AppPath & "/Themes/ThemeLauncher.ini") Then
      ThemeFile = LLM.AppPath & "/Themes/ThemeLauncher.ini"
      'Message(ThemeFile)
      End If
  End If
  hFile = Open ThemeFile For Input
  Line Input #hFile, sLine
  hFile.Close
  LLM.ThemeName = Trim$(sLine)

  Try Me.Picture = Picture.Load(LLM.AppPath & "/Themes/" & LLM.ThemeName & "/Loading.png").Stretch(Me.Width, Me.Height) 'Scale form and stretch wallpaper to fit
  'Message(LLM.AppPath & "/Themes/" & LLM.ThemeName & "/Loading.png")
  
  LoadStyle(LLM.AppPath & "/Themes/" & LLM.ThemeName & "/Style.ini")

  Status.Foreground = LLM.SetLoadingCol
  Status.Font = Font[LLM.SetLoadingFont]
  Me.Background = LLM.SetBGCol
  Me.Foreground = LLM.SetFGCol

  Timer1.Enabled = True 'Use a timer to open main form so that this Loading form can show ASAP
End

Public Sub Timer1_Timer()  
  Timer1.Enabled = False
  Wait (0.1)'Let Loading Form show ASAP
  LastOSLinuxStoreMain.Show
  'LLM.Loaded = True 'Moved this to main form too
  'Me.Close 'Moved this to the end ofthe Main form loading, so can display up until it it ready
End

Public Sub LoadStyle(StyleFile As String)
  
    'Defaults Theme settings
  LLM.SetTitleCol = &hFFFFFF
  LLM.SetCategoryCol = &hFFFFFF
  LLM.SetDescriptionCol = &hFFFFFF
  LLM.SetItemCol = &hFFFFFF
  LLM.SetItemColssApp = &hFFFFFF
  LLM.SetItemColppApp = &hFFFF50
  LLM.SetItemColppGame = &hAAFF40
  LLM.SetItemColLLApp = &h80B0FF
  LLM.SetItemColLLGame = &hff55ff
  LLM.SetBGCol = &h202020
  LLM.SetFGCol = &hFFFFFF
  LLM.SetSelectCol = &h2a4aaa
  
  LLM.SetTitleFont = "Ubuntu"
  LLM.SetListFont = "Ubuntu"
  LLM.SetDescriptionFont = "Ubuntu"
  LLM.SetStatsFont = "Ubuntu"
  LLM.SetMetaFont = "Ubuntu"
    
  'Load in Theme Style.ini File
  
  Dim I As Integer
  Dim LineID As String
  Dim LineData As String
  Dim InStyle As String
  Dim InStyleSP As String[]
  If Exist(StyleFile) Then
    Try InStyle = File.Load(StyleFile)
    InStyle = Replace(InStyle, Chr(13), Chr(10)) ' Convert to chr(10) not Chr(13)
    InStyleSp = Split(InStyle, Chr(10))
    For I = 0 To InStyleSp.Count - 1
      LineID = ""
      LineData = ""
      If Trim(InStyleSp[I]) <> "" Then
 
        If InStr(InStyleSp[I], "=") >= 2 Then 
          LineID = Left(InStyleSp[I], InStr(InStyleSp[I], "="))
          LineData = Trim(Right(InStyleSp[I], Len(InStyleSp[I]) - Len(LineID)))
          LineID = Lower(Left(LineID, Len(LineID) - 1))
          Select Case LineID
          Case "titlecol"            
            LLM.SetTitleCol = Val(LineData)
          Case "categorycol"
            LLM.SetCategoryCol = Val(LineData)
          Case "descriptioncol"
            LLM.SetDescriptionCol = Val(LineData)
          Case "itemcol"            
            LLM.SetItemCol = Val(LineData)
          Case "itemcolssapp"
            LLM.SetItemColssApp = Val(LineData)
          Case "itemcolppapp"
            LLM.SetItemColppApp = Val(LineData)
          Case "itemcolppgame"
            LLM.SetItemColppGame = Val(LineData)
          Case "itemcolllapp"
            LLM.SetItemColLLApp = Val(LineData)
          Case "itemcolllgame"
            LLM.SetItemColLLGame = Val(LineData)
          Case "metacol"
            LLM.SetMetaCol = Val(LineData)
          Case "statscol"
            LLM.SetStatsCol = Val(LineData)
          Case "bgcol"
            LLM.SetBGCol = Val(LineData)
          Case "fgcol"
            LLM.SetFGCol = Val(LineData)
          Case "selectcol"
            LLM.SetSelectCol = Val(LineData)
          Case "loadingcol"
            LLM.SetLoadingCol = Val(LineData)
          Case "titlefont"
            LLM.SetTitleFont = LineData
          Case "listfont"
            LLM.SetListFont = LineData
          Case "descriptionfont"
            LLM.SetDescriptionFont = LineData
          Case "statsfont"
            LLM.SetStatsFont = LineData
          Case "metafont"
            LLM.SetMetaFont = LineData
          Case "titlesbold"
            If Lower(LineData) = "true" Or Lower(LineData) = "yes" Then 
              LLM.SetTitlesBold = True
            Else 
              LLM.SetTitlesBold = False
            End If
          Case "listbold"
            If Lower(LineData) = "true" Or Lower(LineData) = "yes" Then 
              LLM.SetListBold = True
            Else 
              LLM.SetListBold = False
            End If
          Case "descriptionbold"
            If Lower(LineData) = "true" Or Lower(LineData) = "yes" Then 
              LLM.SetDescriptionBold = True
            Else 
              LLM.SetDescriptionBold = False
            End If
             
          End Select            
        End If          
      End If
    Next
  End If  
  
End

Public Sub LoadSettings(SettingsFile As String)

  'Easy way to set the destination of Flatpaks
  If Exist("/LastOS/LastOSLinux_Store/Flatpak-system") Then LLMod.FlatpakDest = "system"
  If Exist("/LastOS/LastOSLinux_Store/Flatpak-user") Then LLMod.FlatpakDest = "user"
  
  If Exist(SettingsFile) Then
    
    Print "Loading Settings: " & SettingsFile
    Dim I As Integer
    'Load in Settings  
    Dim InSet As String
    Dim InSetSp As String[]
    Dim LineSet As String
    Dim LineData As String
      
    Try InSet = File.Load(SettingsFile)
    InSet = Replace(InSet, Chr(13), Chr(10)) ' Convert to chr(10) not Chr(13)
    InSetSp = Split(InSet, Chr(10))
    For I = 0 To InSetSp.Count - 1
      LineSet = Trim(InSetSp[I])
      If Trim(LineSet) <> "" Then
        If InStr(LineSet, "=", 1) >= 1 Then 'Only do items with = in them      
          LineData = Right(LineSet, Len(LineSet) - InStr(LineSet, "=", 1))
          LineSet = Left(LineSet, Len(LineSet) - Len(LineData))
          LineSet = Lower(Left(LineSet, Len(LineSet) - 1)) 'Lowercase and Remove =
          LineSet = Replace(LineSet, "llm.", "") 'Leftover setting mistake, leave in for now to repair settings file
          Select Case LineSet
          Case "checkforupdate"
            LLM.CheckForUpdate = LLMod.IsTrue(LineData)            
          Case "quitoncomplete"
            If LLM.QuitOnComplete = False Then LLM.QuitOnComplete = LLMod.IsTrue(LineData) 'If it's already tru then it was given in the command line, so leave it set to that
          Case "useonlinerepository"
            LLM.UseOnlineRepository = LLMod.IsTrue(LineData)
            If LLM.UseOnlineRepository = False Then LLM.HideOnline = True ' No point in showing the items if they are turned of, but the user still can if they want (local cached items etc), if LLM.UseCacheRepository it will still show them ones
          Case "usecacherepository" 
            If Exist("/LastOS/RepoBuilderNoCache") Then
              'LLM.UseCacheRepository = False
              LLM.RepoBuilderNoCache = True
            Else 'Check what user sets
              'LLM.UseCacheRepository = LLMod.IsTrue(LineData)
              LLM.RepoBuilderNoCache = False
            End If
          Case "uselocaldbfiles"
            LLM.UseLocalDBFiles = LLMod.IsTrue(LineData)
          Case "uselocal"
            LLM.UseLocal = LLMod.IsTrue(LineData)
          Case "skipscanifdbfile"
            LLM.SkipScanIfDBFile = LLMod.IsTrue(LineData)
          Case "usevideoplayback"
            LLM.UseVideoPlayback = LLMod.IsTrue(LineData)
          Case "videovolume"
            LLM.VideoVolume = Val(LineData) / 100 '(0.1 To 1.0 Is Full volume)so divide 100 by 100 To get 1(100%)
            If LLM.VideoVolume > 1 Then LLM.VideoVolume = 1
          Case "mntscan"
            LLM.MntScan = LLMod.IsTrue(LineData)
          Case "mediascan"
            LLM.MediaScan = LLMod.IsTrue(LineData)
          Case "copypackagesintorepository"
            LLM.CopyPackagesIntoRepository = LLMod.IsTrue(LineData)
          End Select
        End If
      End If
    Next
  End If
End

Public Sub Form_Close()
  LastOSLinuxStoreMain.ForceClose = True
  Quit
  LastOSLinuxStoreMain.Close

End
